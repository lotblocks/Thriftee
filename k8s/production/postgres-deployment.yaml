apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: raffle-platform
  labels:
    app: postgres
spec:
  serviceName: postgres-service
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      securityContext:
        runAsUser: 999
        runAsGroup: 999
        fsGroup: 999
      containers:
      - name: postgres
        image: postgres:15-alpine
        ports:
        - containerPort: 5432
          name: postgres
        env:
        - name: POSTGRES_DB
          value: "raffle_platform_prod"
        - name: POSTGRES_USER
          value: "raffle_user"
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: raffle-secrets
              key: postgres-password
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        args:
        - postgres
        - -c
        - max_connections=200
        - -c
        - shared_buffers=256MB
        - -c
        - effective_cache_size=1GB
        - -c
        - maintenance_work_mem=64MB
        - -c
        - checkpoint_completion_target=0.9
        - -c
        - wal_buffers=16MB
        - -c
        - default_statistics_target=100
        - -c
        - random_page_cost=1.1
        - -c
        - effective_io_concurrency=200
        - -c
        - work_mem=4MB
        - -c
        - min_wal_size=1GB
        - -c
        - max_wal_size=4GB
        - -c
        - max_worker_processes=8
        - -c
        - max_parallel_workers_per_gather=4
        - -c
        - max_parallel_workers=8
        - -c
        - max_parallel_maintenance_workers=4
        - -c
        - log_statement=all
        - -c
        - log_duration=on
        - -c
        - log_min_duration_statement=1000
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - exec pg_isready -U "raffle_user" -d "raffle_platform_prod" -h 127.0.0.1 -p 5432
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 6
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - exec pg_isready -U "raffle_user" -d "raffle_platform_prod" -h 127.0.0.1 -p 5432
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 6
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
        - name: postgres-config
          mountPath: /etc/postgresql/postgresql.conf
          subPath: postgresql.conf
        - name: postgres-init
          mountPath: /docker-entrypoint-initdb.d
      volumes:
      - name: postgres-config
        configMap:
          name: postgres-config
      - name: postgres-init
        configMap:
          name: postgres-init
  volumeClaimTemplates:
  - metadata:
      name: postgres-storage
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: "fast-ssd"
      resources:
        requests:
          storage: 100Gi

---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  namespace: raffle-platform
  labels:
    app: postgres
spec:
  type: ClusterIP
  ports:
  - port: 5432
    targetPort: 5432
    protocol: TCP
    name: postgres
  selector:
    app: postgres

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  namespace: raffle-platform
data:
  postgresql.conf: |
    # PostgreSQL configuration for production
    listen_addresses = '*'
    port = 5432
    max_connections = 200
    shared_buffers = 256MB
    effective_cache_size = 1GB
    maintenance_work_mem = 64MB
    checkpoint_completion_target = 0.9
    wal_buffers = 16MB
    default_statistics_target = 100
    random_page_cost = 1.1
    effective_io_concurrency = 200
    work_mem = 4MB
    min_wal_size = 1GB
    max_wal_size = 4GB
    max_worker_processes = 8
    max_parallel_workers_per_gather = 4
    max_parallel_workers = 8
    max_parallel_maintenance_workers = 4
    
    # Logging
    log_destination = 'stderr'
    logging_collector = on
    log_directory = 'log'
    log_filename = 'postgresql-%Y-%m-%d_%H%M%S.log'
    log_statement = 'all'
    log_duration = on
    log_min_duration_statement = 1000
    log_line_prefix = '%t [%p]: [%l-1] user=%u,db=%d,app=%a,client=%h '
    
    # Replication
    wal_level = replica
    max_wal_senders = 3
    max_replication_slots = 3
    hot_standby = on

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-init
  namespace: raffle-platform
data:
  01-init.sql: |
    -- Create extensions
    CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
    CREATE EXTENSION IF NOT EXISTS "pg_stat_statements";
    CREATE EXTENSION IF NOT EXISTS "pg_trgm";
    
    -- Create monitoring user
    CREATE USER monitoring WITH PASSWORD 'monitoring_password';
    GRANT CONNECT ON DATABASE raffle_platform_prod TO monitoring;
    GRANT USAGE ON SCHEMA public TO monitoring;
    GRANT SELECT ON ALL TABLES IN SCHEMA public TO monitoring;
    ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT SELECT ON TABLES TO monitoring;